
## load package
library('MALDIquant', lib.loc='C:/Program Files/R/R-3.2.4revised/library')
library('MALDIquantForeign', lib.loc='C:/Program Files/R/R-3.2.4revised/library')
library("rjson")
#Ref: https://stackoverflow.com/questions/2617600/importing-data-from-a-json-file-into-r

#s <- import("C:/InstallationPhD/HDR_UK_MALDI/AnalysisXML_HDR_UK/reducedMatchingSpectra", type="auto")
s <- import("C:/Users/qd18830/OneDrive - University of Bristol/Documents/PhD/WFMM/Staph Aureus/20210203_MALDI_tarcisio", type="auto")


#Remove temporarily to generate raw intensity files 
s <- removeBaseline(s, method = 'SNIP', iterations = 100)
#s <- calibrateIntensity(s, method = 'TIC')


#fileConn<-file("C:/InstallationPhD/HDR_UK_MALDI/AnalysisXML_HDR_UK/fidToMgf_WFMM/result.txt", open = "wt")
fileConn<-file("C:/InstallationPhD/HDR_UK_MALDI/AnalysisXML_HDR_UK/fidToMgf_WFMM/resultJe2+NE1532_RescalingCorrection.txt", open = "wt")

sumTotalIonAllSpec <- 0
averageSumIonAllSpec <- 0

for (ii in 1:length(s))
{
  #obtain total for sum of intensity of each spectra; expect approx. 72 * 4704901 ~ 338752872
  sumTotalIonAllSpec <- sumTotalIonAllSpec + totalIonCurrent(s[[ii]])
  
  #obtain average of sum of intensity of each spectra
  averageSumIonAllSpec <- sumTotalIonAllSpec / length(s)
}


for (ii in 1:length(s))
{
  parts <- unlist(strsplit(s[[ii]]@metaData$path, "\\\\"))
  
  StorageIdPart <- parts[length(parts) - 3]
  
  StorageIdPart <- substr(StorageIdPart, 1, nchar(StorageIdPart) - 2)
  
  writeLines("BEGIN IONS", fileConn)
  
  writeLines(paste(c("TITLE=", StorageIdPart), collapse = ''), fileConn)
  
  writeLines(paste(c("scan=", as.character(ii)), collapse = ''), fileConn)
  
  sizeSpectra <- length(s[[ii]]@mass)
  
  for (j in 1:sizeSpectra)
  {
    
    writeLines(paste(c(as.character(s[[ii]]@mass[j]), " ",  as.character(s[[ii]]@intensity[j] / averageSumIonAllSpec)), collapse = ''), fileConn)
    ##write(paste(c(" ", as.character(s[[1]]@intensity[j]), "\n"), collapse = ''), fileConn)
  }
  #paste(c(as.character(s[[1]]@mass[1]), " ",  as.character(s[[1]]@intensity[1])), collapse = '')
  #paste(c(as.character(s[[1]]@mass[100]), " ",  as.character(s[[5]]@intensity[100])), collapse = '')
  
  writeLines("END IONS", fileConn)
}
close(fileConn)
